import React, { useState } from "react";

function useFormik({ initialValues }) {
  //Atualiza o objeto
  const [values, setValues] = useState(initialValues);
  //Atualiza o objeto

  //Captura mudanças que voce faz no campo
  function handleChange(event) {
    /* const fieldName = event.target.getAttribute('name'); */
    const fieldName = event.target.getAttribute("name");
    const value = event.target.value;

    setValues({
      ...values,
      [fieldName]: value,
    });
  }
 


  return {
    values,
    handleChange,
  };
}

//Condição que valida se o e-mail é valido ou não//
function validate(values) {
  const errors = {};

  /* if (!values.userEmail.includes("@")) {
    errors.userEmail = "Por favor, insira um e-mail válido";
  } */

  //userEmail: "Por favor, insira um email válido.",

  return errors;
}

const SignupForm = ({ placeholder }) => {
 
    //1-Criamos uma connst de erro para  ser
  //uma regra de validação  ao e-mail
  const [errors, setErrors] = useState({});

  //2-para fazer o erro aparecer na tela precisamos fazer um controle de estado com o react

  const formik = useFormik({
    initialValues: {
      userEmail: "userEmail",
    },
    
  });

  return (
    <form
      onSubmit={(event) => {
       
        event.preventDefault();
        console.log(formik.values)
        console.log(validate(formik.values));

        /* alert("Email inválido"); */
      }}
    >
      <input
        id="userEmail"
        name="userEmail"
        type="text"
        onChange={formik.handleChange}
        value={formik.values.userEmail}
        placeholder={placeholder}
      />

      <button type="submit">Submit</button>
      {errors.userEmail && (
        <span className="formField__error">{errors.userEmail}</span>
      )}
    </form>
  );
};

export default SignupForm;
